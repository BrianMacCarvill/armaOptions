% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/europeanPutOptionValue.R
\name{europeanPutOptionValue}
\alias{europeanPutOptionValue}
\title{Calculate European Put Option Value}
\usage{
europeanPutOptionValue(
  stock_data,
  future_time,
  sell_value,
  max.p = 5,
  max.q = 5
)
}
\arguments{
\item{stock_data}{Numeric vector representing the historical stock prices.}

\item{future_time}{Future time period (in same units as stock_data) for which the put option value is calculated.}

\item{sell_value}{The strike price of the European put option.}

\item{p}{The maximum order of the autoregressive part of the ARMA model.}

\item{q}{The maximum order of the moving average part of the ARMA model.}
}
\value{
An estimate of the value of a European put option.
}
\description{
This function calculates the value of a European put option based on historical stock prices, a future time period, and a specified strike price.
}
\examples{
\dontrun{
library(stats)
library(forecast)
# Set the model parameters
n <- 1000  # Number of observations
ar_params <- c(0.5, -0.25)  # AR coefficients
ma_params <- c(0.4, 0.3)    # MA coefficients
intercept <- 0.5            # Intercept term for the linear component
# Generate an ARMA(2,2) series
set.seed(1)  # For reproducibility
arma_series <- arima.sim(n = n, model = list(ar = ar_params, ma = ma_params), sd = 1)

# Add a linear trend
time_index <- 1:n
linear_component <- intercept + 0.05 * time_index  # Linear trend: intercept + slope * time
trended_series <- arma_series + linear_component
europeanCallOptionValue(stock_data = trended_series, future_time = 3, sell_value = 50, max.p = 5, max.q = 5)
}

}
